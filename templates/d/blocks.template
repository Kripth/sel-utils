--- start blocks blocks.d ---
module sul.blocks;

public struct BlockData
{
	
	bool exists;
	ubyte id, meta;

	alias exists this;

}

public struct Point
{
	
	ubyte x, y, z;

}

public struct BoundingBox
{
	
	bool exists;
	Point min, max;

	public this(Point min, Point max)
	{
		this.exists = true;
		this.min = min;
		this.max = max;
	}

	alias exists this;

}

public struct Block
{
	
	string name;
	ushort id;
	BlockData java, pocket;
	bool solid;
	double hardness, blastResistance;
	ubyte opacity, luminance, encouragement, flammability;
	bool replaceable;
	BoundingBox boundingBox;
	
	alias id this;

}

public enum Blocks : Block
{
	
{{blocks_values@BLOCKS}}

}
--- end ---
--- start blocks_values ---
	{{NAME:camel_case}} = Block("{{NAME:spaced}}", {{ID}}, BlockData({{JAVA}}{{JAVA==true?, {{JAVA_ID}}, {{JAVA_META}}}}), BlockData({{POCKET}}{{POCKET==true?, {{POCKET_ID}}, {{POCKET_META}}}}), {{SOLID}}, {{HARDNESS}}, {{BLAST_RESISTANCE}}, {{OPACITY}}, {{LUMINANCE}}, {{ENCOURAGEMENT}}, {{FLAMMABILITY}}, {{REPLACEABLE}}{{HAS_BOUNDING_BOX==true?, BoundingBox(Point({{BB_MIN_X}}, {{BB_MIN_Y}}, {{BB_MIN_Z}}), Point({{BB_MAX_X}}, {{BB_MAX_Y}}, {{BB_MAX_Z}}))}}),
--- end ---
